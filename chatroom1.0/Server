package chatroom;

import javax.imageio.IIOException;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.net.BindException;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.ArrayList;
import java.util.List;

public class Server {

    boolean started = false;
    ServerSocket ss = null;
    List<ChatClient> clients= new ArrayList();

    public static void main(String[] args) {
        new Server().start();
    }

    private void start() {
        try {
            ss = new ServerSocket(8888);
            started = true;
        }catch (BindException e){
            System.out.println("端口使用中");
        } catch (IOException e) {
            e.printStackTrace();
        }
        try {
            while (started){
                Socket s = ss.accept();
                ChatClient c = new ChatClient(s);
                System.out.println("客户端接收成功");
                new Thread(c).start();
                clients.add(c);
            }
        }catch (IOException e){
            e.printStackTrace();
        }finally {
            try {
                ss.close();
            }catch (IOException e){
                e.printStackTrace();
            }
        }
    }

    class ChatClient implements Runnable{
        private Socket s;
        DataInputStream dis = null;
        DataOutputStream dos = null;
        boolean bConnected = false;

        public ChatClient(Socket s){
            this.s = s;
            try {
                dis = new DataInputStream(s.getInputStream());
                dos = new DataOutputStream(s.getOutputStream());
                bConnected = true;
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        void send(String s){
            try {
                dos.writeUTF(s);
            }catch (SocketException e){
                System.out.println("对方退出了");
            }catch (IIOException e){
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        public void run(){
            try {
                while (bConnected){
                    String str = dis.readUTF();
                    for (int i = 0; i < clients.size(); i++) {
                        ChatClient c = clients.get(i);
                        c.send(str);
                    }
                }
            }catch(EOFException e){
                System.out.println("客户端退出了");
            }catch (IOException e){
                e.printStackTrace();
            }finally {
                if(dis != null)
                    if(s != null)
                        try {
                            dis.close();
                            s.close();
                            dos.close();
                        }catch (IOException e){
                            e.printStackTrace();
                        }
            }
        }
    }
}

